"""Database test

Revision ID: ce5e7681f7db
Revises: a71e7f8e1f5b
Create Date: 2024-06-25 18:25:42.682303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce5e7681f7db'
down_revision: Union[str, None] = 'a71e7f8e1f5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_room_id'), 'room', ['id'], unique=False)
    op.create_index(op.f('ix_room_name'), 'room', ['name'], unique=True)
    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('hashed_password', sa.String(
                        length=1024), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('block',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('blocked_user_id', sa.Integer(), nullable=True),
                    sa.Column('blocked_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['blocked_user_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_block_id'), 'block', ['id'], unique=False)
    op.create_table('friend',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('friend_id', sa.Integer(), nullable=True),
                    sa.Column('added_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_friend_id'), 'friend', ['id'], unique=False)
    op.create_table('friend_request',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('from_id', sa.Integer(), nullable=True),
                    sa.Column('to_id', sa.Integer(), nullable=True),
                    sa.Column('sent_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['from_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['to_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_friend_request_id'),
                    'friend_request', ['id'], unique=False)
    op.create_table('message',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('content', sa.String(), nullable=True),
                    sa.Column('sent_at', sa.DateTime(), nullable=True),
                    sa.Column('from_id', sa.Integer(), nullable=True),
                    sa.Column('to_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['from_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['to_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_message_id'), 'message', ['id'], unique=False)
    op.create_table('room_membership',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('room_id', sa.Integer(), nullable=True),
                    sa.Column('joined_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_room_membership_id'),
                    'room_membership', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_room_membership_id'), table_name='room_membership')
    op.drop_table('room_membership')
    op.drop_index(op.f('ix_message_id'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_friend_request_id'), table_name='friend_request')
    op.drop_table('friend_request')
    op.drop_index(op.f('ix_friend_id'), table_name='friend')
    op.drop_table('friend')
    op.drop_index(op.f('ix_block_id'), table_name='block')
    op.drop_table('block')
    op.drop_table('user')
    op.drop_index(op.f('ix_room_name'), table_name='room')
    op.drop_index(op.f('ix_room_id'), table_name='room')
    op.drop_table('room')
    # ### end Alembic commands ###
